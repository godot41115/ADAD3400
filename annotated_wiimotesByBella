/**
 * oscP5sendreceive by andreas schlegel
 * example shows how to send and receive osc messages.
 * oscP5 website at http://www.sojamo.de/oscP5
 */
 
import oscP5.*;
import netP5.*;
float myIncomingData; //global variable for wii float
OscP5 oscP5;
NetAddress myRemoteLocation;

void setup() {

  size(400,400);
  frameRate(25);
  /* start oscP5, listening for incoming messages at port 12000 */
  oscP5 = new OscP5(this,9000); //Output port # from OSCulator

  myRemoteLocation = new NetAddress("127.0.0.1",9000);
}


void draw() {
  background(255);  //bg = white
  rect(0,0,400,400);
  fill(255,0,0,myIncomingData); //this is where we need to place the wiimote data (float m1) to control the alpha
  redraw();
  println(myIncomingData);
}

void mousePressed() {
  

  ///* in the following different ways of creating osc messages are shown by example */
  //OscMessage myMessage = new OscMessage("/test");
  
  //myMessage.add(123); /* add an int to the osc message */

  ///* send the message */
  //oscP5.send(myMessage, myRemoteLocation); 
}


/* incoming osc message are forwarded to the oscEvent method. */
void oscEvent(OscMessage theOscMessage) {
  /* print the address pattern and the typetag of the received OscMessage */
  //print("### received an osc message.");
  //print(" addrpattern: "+theOscMessage.addrPattern());
  //println(" typetag: "+theOscMessage.typetag());
  //println(" m1: "+theOscMessage.get(0).floatValue());
  
  myIncomingData = int(map(theOscMessage.get(0).floatValue(), 0.000000, 1.00000000, 0, 255));
  //pulling float 1 from the osc message, mapping it from original values of 0.0 to 1.0, to rgb values of 0 to 255
}
